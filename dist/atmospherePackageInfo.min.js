!function(e,r){"function"==typeof define&&define.amd?define(["superagent"],r):"object"==typeof exports?module.exports=r(require("superagent")):e.atmospherePackageInfo=r(e.superagent)}(this,function(e){"use strict";function r(r,t){var n=void 0;if("function"!=typeof t)throw new TypeError("cb must be a function");if("[object Array]"===Object.prototype.toString.call(r)){var a=!0,o=!1,i=void 0;try{for(var f,u=r[Symbol.iterator]();!(a=(f=u.next()).done);a=!0){var c=f.value;if("string"!=typeof c)return void t(new TypeError("package must be a string"),[])}}catch(s){o=!0,i=s}finally{try{!a&&u["return"]&&u["return"]()}finally{if(o)throw i}}n=r.join(",")}else{if("string"!=typeof r)return void t(new TypeError("packages must be a string package name or an array of string package names"),[]);n=r}e.get("https://atmospherejs.com/a/packages/findByNames").accept("application/json").query({names:n}).end(function(e,r){if(e)return void t(e,[]);var a={},o=n.split(","),i=!0,f=!1,u=void 0;try{for(var c,s=o[Symbol.iterator]();!(i=(c=s.next()).done);i=!0){var y=c.value,p=!0,l=!1,d=void 0;try{for(var v,m=r.body[Symbol.iterator]();!(p=(v=m.next()).done);p=!0){var g=v.value;if(g.name===y){delete g.name,a[y]=g;break}}}catch(e){l=!0,d=e}finally{try{!p&&m["return"]&&m["return"]()}finally{if(l)throw d}}a[y]||(a[y]=new Error("Package not found on Atmosphere"))}}catch(e){f=!0,u=e}finally{try{!i&&s["return"]&&s["return"]()}finally{if(f)throw u}}t(null,a)})}return r});